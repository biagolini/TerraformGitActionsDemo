name: 'Terraform Deploy [Dev] with Manual Approval'

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      pull-requests: write

    defaults:
      run:
        working-directory: environments/dev

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 'Install Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Validate'
        run: terraform validate

      - name: 'Terraform Plan'
        id: plan
        run: |
          terraform plan -var-file=terraform.tfvars -out=tfplan -no-color
          terraform show -no-color tfplan > plan_output.txt

      - name: 'Upload Plan Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: |
            environments/dev/tfplan
            environments/dev/plan_output.txt

      - name: 'Comment Plan on PR'
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('environments/dev/plan_output.txt', 'utf8');
            const output = `#### Terraform Plan ðŸ“–

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${plan}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

  apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: develop

    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: environments/dev

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 'Install Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: 'Download Plan Artifact'
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: environments/dev/

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve tfplan
